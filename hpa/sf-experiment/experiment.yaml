apiVersion: optimize.stormforge.io/v1beta2
kind: Experiment
metadata:
  name: hpa-sf-011
  labels:
    stormforge.io/application: hpa-sf
    stormforge.io/scenario: standard
spec:
  parameters:
  - name: memory
    baseline: 2098
    min: 128
    max: 4096
  - name: cpu
    baseline: 1000
    min: 100
    max: 4000
  - name: min_replicas
    baseline: 2
    min: 1
    max: 4
  - name: max_replicas
    baseline: 2
    min: 1
    max: 4
  - name: avg_utilization
    baseline: 50
    min: 10
    max: 80
  constraints:
  - order:
      lowerParameter: min_replicas
      upperParameter: max_replicas
  metrics:
  - name: cost
    type: prometheus
    port: 9090
    minimize: true
    query: ({{ cpuRequests . "" }} * 17) + ({{ memoryRequests . "" | GB }} * 3)
  - name: p95-latency
    type: prometheus
    port: 9090
    minimize: true
    query: scalar(percentile_95{job="trialRun",instance="{{ .Trial.Name }}"})
  - name: p50-latency
    type: prometheus
    port: 9090
    minimize: true
    optimize: false
    query: scalar(median{job="trialRun",instance="{{ .Trial.Name }}"})
  - name: p99-latency
    type: prometheus
    port: 9090
    # max: "1000" # RW
    minimize: true
    optimize: false
    query: scalar(percentile_99{job="trialRun",instance="{{ .Trial.Name }}"})
  - name: error_ratio
    type: prometheus
    port: 9090
    minimize: true
    optimize: false
    query: scalar(error_ratio{job="trialRun",instance="{{ .Trial.Name }}"})
  patches:
  - targetRef:
      name: voting-hpa
      apiVersion: autoscaling/v2beta2
      kind: HorizontalPodAutoscaler
    patch: |
      spec:
        maxReplicas: {{ .Values.max_replicas }}
        minReplicas: {{ .Values.min_replicas }}
        metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: {{ .Values.avg_utilization }}
  - targetRef:
      name: voting-service
      apiVersion: apps/v1
      kind: Deployment
    patch: |
      spec:
        template:
          spec:
            containers:
            - name: voting-service
              resources:
                limits:
                  memory: '{{ .Values.memory }}M'
                  cpu: '{{ .Values.cpu }}m'
                requests:
                  memory: '{{ .Values.memory }}M'
                  cpu: '{{ .Values.cpu }}m'
  trialTemplate:
    metadata:
      labels:
        stormforge.io/application: hpa-sf
        stormforge.io/scenario: standard
    spec:
      jobTemplate:
        metadata:
          labels:
            stormforge.io/application: hpa-sf
            stormforge.io/scenario: standard
        spec:
          template:
            metadata:
              labels:
                stormforge.io/application: hpa-sf
                stormforge.io/scenario: standard
            spec:
              containers:
              - name: stormforger
                image: thestormforge/optimize-trials:v0.0.1-stormforger
                env:
                - name: TITLE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: TEST_CASE
                  value: sf_sandbox/hpa-sf-richard
                - name: TEST_CASE_FILE
                  value: /forge-init.d/testcase.js
                - name: TARGET
                  value: http://35.244.255.189/
                - name: STORMFORGER_JWT
                  valueFrom:
                    secretKeyRef:
                      name: stormforger-service-account
                      key: accessToken
                resources: {}
                volumeMounts:
                - name: test-case-file
                  readOnly: true
                  mountPath: /forge-init.d
              volumes:
              - name: test-case-file
                configMap:
                  name: standard-test-case-file
      setupServiceAccountName: stormforge-setup
      setupTasks:
      - name: monitoring
        args:
        - prometheus
        - $(MODE)
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stormforge-setup
  labels:
    stormforge.io/application: hpa-sf
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: stormforge-prometheus
  labels:
    stormforge.io/application: hpa-sf
rules:
- resources:
  - clusterroles
  - clusterrolebindings
  apiGroups:
  - rbac.authorization.k8s.io
  verbs:
  - get
  - create
  - delete
- resources:
  - serviceaccounts
  - services
  - configmaps
  apiGroups:
  - ""
  verbs:
  - get
  - create
  - delete
- resources:
  - deployments
  apiGroups:
  - apps
  verbs:
  - get
  - create
  - delete
  - list
  - watch
- resources:
  - nodes
  - nodes/metrics
  - nodes/proxy
  - services
  apiGroups:
  - ""
  verbs:
  - list
  - watch
  - get
- resources:
  - pods
  apiGroups:
  - ""
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stormforge-setup-prometheus
  labels:
    stormforge.io/application: hpa-sf
roleRef:
  name: stormforge-prometheus
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: stormforge-setup
  kind: ServiceAccount
  namespace: default
