

apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: elasticsearch-example-workflow-
spec:
  entrypoint: run-experiment
  templates:
  - name: run-experiment
    steps:
      - - name: create-experiment
          template: create-experiment
      - - name: create-trial
          template: create-trial
        - name: wait-for-trial-ready
          template: wait-for-trial-ready
          arguments:
            parameters:
            - name: trial-name
              value: "{{steps.create-trial.outputs.parameters.trial-name}}"
        - name: wait-for-trial-complete
          template: wait-for-trial-complete
          arguments:
            parameters:
            - name: trial-name
              value: "{{steps.create-trial.outputs.parameters.trial-name}}"
      - - name: cleanup-experiment
          template: cleanup-experiment
  - name: create-experiment
    script:
      image: 516273174544.dkr.ecr.us-east-1.amazonaws.com/thestormforge-examples
      imagePullPolicy: Always
      command: [sh]
      source: |
        set -euo pipefail
        cd /examples/.ci/elasticsearch
        ytt --data-value workflow_name="{{workflow.name}}" --data-value workflow_uid="{{workflow.uid}}" -f owner_references_patch.tpl.yaml -f schema.yaml  > owner_references_patch.yaml
        kustomize build . | kubectl apply -f -
  - name: create-trial
    script:
      image: 516273174544.dkr.ecr.us-east-1.amazonaws.com/thestormforge-examples
      command: [sh]
      source: |
        set -euo pipefail
        kubectl get experiment elasticsearch-example -o yaml | stormforge generate trial --assign cpu=7559 --assign memory=11086 --assign heap_percent=50 -f - | kubectl create -f -  -o jsonpath='{.metadata.name}' > /tmp/generated_trial_name
    outputs:
      parameters:
      - name: trial-name
        valueFrom:
          path: /tmp/generated_trial_name
  - name: wait-for-trial-ready
    script:
      image: 516273174544.dkr.ecr.us-east-1.amazonaws.com/thestormforge-examples
      command: [sh]
      source: |
        set -euo pipefail
        echo 'Waiting on trial "{{inputs.parameters.trial-name}} to meet condition=stormforge.io/trial-ready'
        kubectl wait trial "{{inputs.parameters.trial-name}}" --for condition=stormforge.io/trial-ready --timeout 180s

    inputs:
      parameters:
        - name: trial-name
  - name: wait-for-trial-complete
    script:
      image: 516273174544.dkr.ecr.us-east-1.amazonaws.com/thestormforge-examples
      command: [sh]
      source: |
        set -euo pipefail
        echo 'Waiting on trial "{{inputs.parameters.trial-name}} to meet condition=stormforge.io/trial-complete'
        kubectl wait trial "{{inputs.parameters.trial-name}}" --for condition=stormforge.io/trial-complete --timeout 360s
        echo "Recording trial optimized metrics in workflow outputs..."
        kubectl get trial "{{inputs.parameters.trial-name}}" -o jsonpath='{.spec.values}' > /tmp/trial_optimized_metrics
        printf "The optimized metric values are: %s\n" $(cat /tmp/trial_optimized_metrics)
    inputs:
      parameters:
        - name: trial-name
    outputs:
      parameters:
      - name: trial_optimized_metrics
        valueFrom:
          path: /tmp/trial_optimized_metrics
  - name: cleanup-experiment
    script:
      image: 516273174544.dkr.ecr.us-east-1.amazonaws.com/thestormforge-examples
      command: [sh]
      source: |
        set -euo pipefail
        cd /examples/.ci/elasticsearch
        ytt --data-value workflow_name="{{workflow.name}}" --data-value workflow_uid="{{workflow.uid}}" -f owner_references_patch.tpl.yaml -f schema.yaml  > owner_references_patch.yaml
        kustomize build . | kubectl delete -f -
