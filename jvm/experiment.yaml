---
apiVersion: optimize.stormforge.io/v1beta2
kind: Experiment
metadata:
  name: jvm-reactors

spec:
  optimization:
  - name: experimentBudget
    value: "80"
  parameters:
  - name: heap_size
    baseline: 1024
    min: 512
    max: 12288
  - name: parallel_gc_threads
    baseline: 20
    min: 10
    max: 30
  - name: con_gc_threads
    baseline: 8
    min: 0
    max: 8
  - name: cpu
    baseline: 1000
    min: 200
    max: 2000
  - name: memory
    baseline: 2048
    min: 100
    max: 12288
  constraints:
  - order:
      lowerParameter: heap_size
      upperParameter: memory
  metrics:
  - name: duration
    minimize: true
    query: "{{duration .StartTime .CompletionTime}}"
  - name: cost
    minimize: true
    query: "{{div (add (mul .Values.cpu 22) (mul .Values.memory 3)) 1000}}"
  patches:
  - targetRef:
      apiVersion: batch/v1
      kind: Job
    patch: |
      spec:
        template:
          spec:
            containers:
            - name: renaissance
              resources:
                limits:
                  cpu: "{{ .Values.cpu }}m"
                  memory: "{{ .Values.memory }}Mi"
                requests:
                  cpu: "{{ .Values.cpu }}m"
                  memory: "{{ .Values.memory }}Mi"
              env:
              - name: HEAP_SIZE
                value: {{ .Values.heap_size }}
              - name: CON_GC_THREADS
                value: {{ .Values.con_gc_threads }}
              - name: PARALLEL_GC_THREADS
                value: {{ .Values.parallel_gc_threads }}
  trialTemplate:
    spec:
      jobTemplate:
        spec:
          template: # pod
            spec:
              activeDeadlineSeconds: 1800
              containers:
              - name: renaissance
                image: ghcr.io/thestormforge/examples-jvm
                args: ["reactors"]
