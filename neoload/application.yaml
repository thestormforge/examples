apiVersion: v1
kind: Service
metadata:
  labels:
    app: voting-app
    component: db
  name: db
spec:
  ports:
  - port: 5432
  selector:
    app: voting-app
    component: db
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: voting-app
    component: redis
  name: redis
spec:
  ports:
  - port: 6379
  selector:
    app: voting-app
    component: redis
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: result-exporter
  name: result-exporter
spec:
  ports:
  - port: 5000
  selector:
    component: result-exporter
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: voting-app
    component: result-service
  name: result-service
spec:
  ports:
  - port: 80
  selector:
    app: voting-app
    component: result-service
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: voting-app
    component: voting-service
  name: voting-service
spec:
  ports:
  - port: 80
  selector:
    app: voting-app
    component: voting-service
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: voting-app
    component: db
  name: db
spec:
  selector:
    matchLabels:
      app: voting-app
      component: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: voting-app
        component: db
    spec:
      containers:
      - env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        image: postgres:11.1-alpine
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
          initialDelaySeconds: 10
          periodSeconds: 5
        name: db
        ports:
        - containerPort: 5432
          name: postgres
        readinessProbe:
          initialDelaySeconds: 10
          periodSeconds: 5
          tcpSocket:
            port: 5432
        resources:
          limits:
            cpu: 1
            memory: 2000Mi
          requests:
            cpu: 1
            memory: 2000Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 70
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-storage
      volumes:
      - emptyDir: {}
        name: postgres-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: voting-app
    component: redis
  name: redis
spec:
  selector:
    matchLabels:
      app: voting-app
      component: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: voting-app
        component: redis
      name: redis
    spec:
      containers:
      - image: redis:5.0-alpine
        name: redis
        ports:
        - containerPort: 6379
        readinessProbe:
          initialDelaySeconds: 10
          periodSeconds: 5
          tcpSocket:
            port: 6379
        resources:
          limits:
            cpu: 1
            memory: 2000Mi
          requests:
            cpu: 1
            memory: 2000Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: result-exporter
  name: result-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      component: result-exporter
  template:
    metadata:
      labels:
        component: result-exporter
      name: result-exporter
    spec:
      containers:
      - env:
        - name: DB_HOST
          value: db
        image: ghcr.io/thestormforge/examples-results-exporter
        name: result-exporter
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: 1
            memory: 2000Mi
          requests:
            cpu: 1
            memory: 2000Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: voting-app
    component: result-service
  name: result-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: voting-app
      component: result-service
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: voting-app
        component: result-service
      name: result-service
    spec:
      containers:
      - image: dockersamples/examplevotingapp_result
        imagePullPolicy: IfNotPresent
        name: result-service
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 1
            memory: 2000Mi
          requests:
            cpu: 1
            memory: 2000Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: voting-app
    component: voting-service
  name: voting-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: voting-app
      component: voting-service
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: voting-app
        component: voting-service
      name: voting-service
    spec:
      containers:
      - image: dockersamples/examplevotingapp_vote
        imagePullPolicy: IfNotPresent
        name: voting-service
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: 1
            memory: 2000Mi
          requests:
            cpu: 1
            memory: 2000Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: voting-app
    component: worker
  name: worker
spec:
  replicas: 3
  selector:
    matchLabels:
      app: voting-app
      component: worker
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: voting-app
        component: worker
      name: worker
    spec:
      containers:
      - image: dockersamples/examplevotingapp_worker
        imagePullPolicy: IfNotPresent
        name: worker
        resources:
          limits:
            cpu: 1
            memory: 2000Mi
          requests:
            cpu: 1
            memory: 2000Mi

