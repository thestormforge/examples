apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: voting-app
    component: db
spec:
  ports:
    - port: 5432
  selector:
    app: voting-app
    component: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    app: voting-app
    component: db
spec:
  selector:
    matchLabels:
      app: voting-app
      component: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: voting-app
        component: db
    spec:
      containers:
      - image: postgres:11.1-alpine
        name: db
        securityContext:
          runAsUser: 70 # postgres user on Alpine
          allowPrivilegeEscalation: false
        resources:
          limits:
            memory: 2000Mi
            cpu: 1.0
          requests:
            memory: 2000Mi
            cpu: 1.0
        env:
          - name: PGDATA
            value: "/var/lib/postgresql/data/pgdata"
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
          - name: postgres-storage
            mountPath: /var/lib/postgresql/data
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
        - name: postgres-storage
          emptyDir: {}
