apiVersion: v1
data:
  har2testcase.sh: "#!/bin/bash -x\n\napt update && \\\napt install -y --no-install-recommends
    \\\nca-certificates \\\ncurl \\\nsed \\\njq \n\ncurl -LO https://github.com/rename-this/vhs/releases/download/v0.1.0-alpha/vhs_0.1.0-alpha_linux_amd64.deb\napt
    install -y ./vhs_0.1.0-alpha_linux_amd64.deb\n\ncurl -Lo forge.tar.gz https://app.stormforger.com/download/cli/linux
    && \\\ntar -C /usr/local/bin -xf forge.tar.gz\n\n\n# timeout 60s vhs --input \"gcs|gzip|json\"
    --output \"har|stdout\" --gcs-bucket-name vhsdemo --gcs-object-name 1lnFKPQEk4a9d9BJBfhPWhiL3hk
    --debug --source-duration 30s > /tmp/har.json\ntimeout 60s vhs --input \"gcs|gzip|json\"
    --output \"har|stdout\" --gcs-bucket-name ${GCS_BUCKET} --gcs-object-name ${GCS_OBJECT}
    --debug --source-duration 30s > /tmp/har.json\n\ncat /tmp/har.json | \\\njq -c
    -f /har/harshrinker.jq --arg limit ${HAR_LIMIT} | \\\nforge har - | \\\nsed -e
    \"s/[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}/${INGRESS_ADDRESS}/g\"
    | \\\nsed 's/preflight/tiny/g' \\\n> ${TEST_CASE_FILE}\n"
  harshrinker.jq: "# jq script to reduce the size of an HTTP archive (HAR) file. \n#
    Can be executed with cat <input_harfile> | jq -c -f harshrinker.jq --arg limit
    <file size limit in bytes> > <output_filename>\n\n# Function to calculate filesize
    in bytes. Assumes UTF8 encoding and compact output (not pretty printed).\ndef
    filesize(f): (f | tostring | utf8bytelength);\n\n# Function to drop the last element
    from the HAR entries array.\ndef droplastentry(har): har.log.entries = har.log.entries[0:-1];\n\n#
    Function to calculate the average size in bytes of an element in the HAR entry
    array.\ndef avgentrysize(har): (har.log.entries | tostring | utf8bytelength) /
    (har.log.entries | length);\n\n# Function to calculate the target number of elements
    for the HAR entry array.\ndef numentries(har): (($limit | tonumber) / avgentrysize(har))
    | floor;\n\n# First, limit the entry array size to the target number of elements\n.log.entries
    = [limit(numentries(.); .log.entries[])] |\n\n# Then, cull the array if necessary
    to keep file size under target. \n# This ensures that the file size limit will
    be respected even if the dropped elements from the\n# entries array are smaller
    than the average.\nuntil(filesize(.) <= ($limit | tonumber); droplastentry(.))\n"
kind: ConfigMap
metadata:
  creationTimestamp: "2021-04-21T13:37:29Z"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        .: {}
        f:har2testcase.sh: {}
        f:harshrinker.jq: {}
    manager: kubectl-create
    operation: Update
    time: "2021-04-21T13:37:29Z"
  name: harutils
  namespace: default
  resourceVersion: "19692"
  selfLink: /api/v1/namespaces/default/configmaps/harutils
  uid: 5de3cf44-667a-46a8-a643-e06d4375ab4b
